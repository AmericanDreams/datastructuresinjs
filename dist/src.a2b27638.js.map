{"version":3,"sources":["src/util/Util.js","src/ds/list/ArrayList.js","src/ds/list/linkedlist/SNode.js","src/ds/list/linkedlist/SingleLinkedList.js","src/ds/list/linkedlist/DNode.js","src/ds/list/linkedlist/DoublyLinkedList.js","src/ds/stack/implwitharraylist/Stack.js","src/index.js"],"names":["print","text","myDiv","document","getElementById","innerHTML","body","appendChild","ArrayList","INTERNAL_CAPASITY","internalArray","pointer","item","isInternalArrayFull","isEmpty","resize","index","isValidIndex","undefined","newItem","temp","moveAlltoLeft","moveAlltoRight","newInternalArray","i","length","size","pop","Util","SNode","data","next","SingleLinkedList","root","counter","node","Node","lastNode","getLastNode","getNodeByIndex","DNode","prev","tail","getNode","startIndex","Stack","arrayList","add","get","remove"],"mappings":";;AOAA;;AAEA;;AACA;ANHA,AIAA,AFAA,AGAA,ANAO,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AOI/B,APHE,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAZ;AKAF,AFAA,AGAA,ANEEF,EAAAA,EIHmBsC,AFAAX,GFGd,CAACxB,IIFN,AFAA,KFEA,IACE,MIHUyB,AFAAA,IEAZ,AFAA,EEAkB,AFAA,kHFIhB7B,IADA,GAEA,QAHF;AIFkB,AFAA,AKIpB,APGEE,EAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;AACD,CATM;AIEH,AFAA,OEAK4B,AFAAA,IEAL,AFAA,GEAYA,AFAAA,IEAZ,AFAA;AECA,AFAA,OEAKC,AFAAA,IEAL,AFAA,GEAY,AFAA,IEAZ,AFAA;AECA,AFAD,OEAMU,IAAL,GAAY,IAAZ;AACD;;;;IHHkBjC;AACnB,uBAAc;AAAA;;AACZ,IIDiBwB,AFAAA,AGAAa,KLCZpC,iBAAL,GAAyB,EAAzB;AACA,AIDF,AFAA,AGAA,SLCOC,UKDO,GLCZ,GAAqB,KIDT,AFAA;AFEV,AIFU,AFAA,AGAA;ALCS,KAArB;AAGA,AIHA,AFAA,AGAA,SLGKC,AIHAsB,AFAAA,AGAAa,IDAL,AFAA,GFGA,AIHY,AFAA,EGAZ,CLGe,CAAf,AIHA,AFAA,CGAiB,IAAItC,kBAAJ,EAAjB;ALID,AIHC,AFAA,AGAD,ILKD,AKHA,KDFOkC,AFAAR,IEAL,GAAY,AFAZ,GAAe,CEAf,AFAA;AECA,AFAD,IAED,KEFOA,OAAL,GAAe,CAAf;AACD,IAED;;;WJEA,AKHA,aLGItB,CKHCA,GLGL,CKHA,CLGU,CKHC;ALIT,AKHA,ULGI,CEHN,AGAOkC,ILGIjC,KKHT,CAAekC,GHAbnC,AGAF,CAAmBA,GHArB,CGAE,CHAQ,IFGJ,MAA8B,KAAKE,OAAL,EAAlC,EAAkD;AAChD,AEHF,AGAA,UHAMqB,CEAR,EJGSpB,AKHA,CHAG,GAAG,CGAD+B,CLGV,EEHeV,GEAfxB,GCAK,CDAT,ACAwBoC,EDAd,CCAD,CAAmB,GHAb,CAASpC,CGASkC,GHAlB,CAAb,KGA0B,CAAepB,IAAf,KAAwB,CAA3C,CAAP;ALIC,AIHD,ACAD,MAED,IDFQS,IAAI,GAAG,IAAIC,cAAJ,CAASxB,IAAT,CAAb;AFAA,UAAI,KAAKE,OAAL,EAAJ,EAAoB;AFKpB,AIJA,AFAE,UEAE,CJICJ,EEJEuB,EEAEnB,EFAP,GAAYqB,EEAV,EJIJ,AIJA,AFAE,CFIiB,CIJC,IJIIxB,OAAL,EAAnB,IAAqCC,IAArC;AACD,AIJG,AFAD,MFMH,CERE,MEEOqB,AFAA,IEAL,GAAYE,IAAZ;AACA,AFAA,WGAJ,CHAUE,CEADK,IAAL,GAAYP,AFAE,GAAG,CEAjB,GCAG,CHAmBG,WAAL,EAAjB;AECD,AFACD,AGAF,ODHA,CFGEA,EGAE,GDAG,ECAEvB,CHAC,CAACiB,IAAT,CGAE,EHAcI,AGAlB,EAAoB,EHAlB;AECAA,AFAD,AGAC,QDAAA,IAAI,CAACM,ECAEvB,EDAP,GAAY,ICAZ,CDAiBwB,IAAjB;AACA,ACAD,WLGH,EIHSA,IAAL,CAAUX,IAAV,EJGAf,CIHiBmB,IJGrB,AIHI,EJGO;AACT,AIHE,AFAF,UFGI,CAAC,AEHAD,EEAEQ,GJGGzB,CIHR,CFAF,EEAckB,IAAZ,IJGG,CAAkBnB,KAAlB,CAAL,EAA+B;AAC7B,AIHD,AFAF,AGAC,MHEF,OGFS,ELGEE,GKHG4B,MLGV,GKHK,CAAeE,GAAf,CAAmB,KAAKF,SAAL,CAAepB,IAAf,KAAwB,CAA3C,CAAP;ALIC,AKHF,MAED;ADFE,WAAKQ,OAAL;AJKA,AIJD,MAED,OJES,KAAKxB,aAAL,CAAmBM,KAAnB,CAAP;AACD,MAED,KENA,aAAIA,KAAJ,EAAW;AACT,UAAI,CAAC,AGAP,KHAYC,UGAN,EHAC,CAAkBD,KAAlB,CAAL,EAA+B;AAC7B,AGAF,UAAI,KHAKE,AGAAJ,OAAL,EHAF,AGAF,EAAoB;AHCnB,AGAC,WDDJ,ICCWI,SDDPF,ACCA,KDDJ,EAAW;AACT,ACCC,OAHG,CAKJ,EDHMmB,CJIR,GIJY,GAAG,KAAKQ,EJIhB3B,KAAJ,AIJe,CAAaA,CJIjBG,IIJI,CAAb,EJIF,EAAoB;AAClB,AIJA,AFCA,AGEA,ULCI,CAAC,EIJEgB,AFCA,GFGGlB,CIJC,CFCCsB,IEDIrB,MJIX,CAAkBF,EIJhB,CFCA,CAAoBA,CFGtB,AIJuBE,CJI5B,EAA+B,CEHxB,EAA2BY,GED3B,CFCP,EEDwCK,IAAI,CAACL,IAA7C;AJKE,AIJH,AFCA,MECD,AFCA,SFCWZ,SAAP;AACD;AKFD,aAAO,KAAK4B,SAAL,CAAeG,MAAf,CAAsB,KAAKH,SAAL,CAAepB,IAAf,KAAwB,CAA9C,CAAP;ALIA,AKHD,WLGMhB,aAAL,CAAmBM,KAAnB,IAA4BG,OAA5B;AACA,WILF,AFCA,EFIS,KAAKT,MILVM,AFCAA,KEDJ,AFCA,EFIS,AILEG,AFCAA,CFIiBH,KAAnB,CAAP,AILF,AFCA,EEDoB,AFCA;AFKnB,AILC,AFCA,MFMF,IIPQmB,AFCF,CAAC,GEDK,EFCAlB,CEDG,KAAK0B,MFCb,CEDQ,AFCU3B,CEDGA,IFCrB,CEDQ,AFCb,CEDA,CFC+B;AAC7B,WGAJ,IHAWE,SAAP,MGAM;ADDR,AFEC,AGAD,UDFIiB,GCEG,CDFC,ICEIW,CDFC5B,QCEN,CDFP,ACEsBJ,EDFE,KCEjB,EAAP;ADDE,ACEH,eDFUI,SAAP;AACD,AFED,UAAMiB,CFGR,GEHY,GAAG,KAAKI,KFGbvB,KAAP,EAAc,EEHC,CAAoBA,KAApB,CAAb;AFIA,AEHAmB,MAAAA,IFGI,AEHA,CFGC,AEHAL,IAAL,CFGUb,EEHEE,OAAZ,GFGK,CAAkBH,KAAlB,CAAL,EAA+B;AAC7B,AILFmB,AFEA,MEFAA,IAAI,CAACL,ACCP,EHCSK,EFGEjB,AILT,EFEW,CEFCC,AFEAW,IAAZ,EFGE,CILF,ECCK;ALKJ,AILD,AFED,AGDC,MHGF,OEJSK,ACCA,IDDI,CAACL,ACCAgB,IDDZ,KCCO,CAAepB,IAAf,EAAP;ADAD,ACCA,MDCD;AJIE,UAAMN,IAAI,GAAG,KAAKV,aAAL,CAAmBM,KAAnB,CAAb;AACA,WAAKN,aAAL,CAAmBM,KAAnB,IAA4BE,SAA5B;AACA,WAAKG,AEJP,AGDA,aLKE,CAAmBL,EEJdA,CGDC,ELKkB,EEJ1B,CFI6B,CAA3B,AEJY;AFKZ,AEJA,AGDAY,MAAAA,IHCI,AGDA,CLKCjB,AINP,AFEO,AGDAX,KHCKiB,AGDV,CAAW,CLKX,SINKD,CFEA,CAAkBA,GEFzB,EAAc,AFEP,CAAL,EAA+B,AGD/B;ALMA,AINA,AFEE,UEFImB,GJMCf,CING,CFEDF,EFIT,AINa,KAAKyB,EFEhB,KEFW,CAAa3B,KAAb,CAAb;AJOD,AEJE,AGFD,MLQF,KKRO,IAAIQ,CAAC,GAAG,KAAKsB,SAAL,CAAepB,IAAf,KAAwB,CAArC,EAAwCF,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;ADArD,ACCE,UDDEW,ECCEX,CAAC,CDDC,ICCI,CDDCN,ICCI4B,KDDjB,EAAwB,ECCZ,CAAepB,IAAf,KAAwB,CAAlC,EAAqC;ADArC,AFGF,AGFIE,UHEAO,AGFAP,IHEI,AGFA,CDDCV,ACCAlB,EHEE,GGFP,CAAW,CHECiC,EEHd,EFGF,AGFoBa,SAAL,CAAeE,GAAf,CAAmBxB,CAAnB,IAAwB,UAAnC;ADAH,ACCE,SAFD,MAEO,IAAIA,CAAC,KAAK,CAAV,EAAa;AHGtB,AGFII,UHEAZ,AGFAY,CLKN,GKLU,CHEC,AGFA5B,KHEK,AGFV,CHEJ,AGFe,EHEE,GGFG8C,ILKZlC,IAAV,CKLiB,CLKD,AKLgBoC,GAAf,CAAmBxB,CAAnB,IAAwB,YAAnC;ALMJ,AINA,AFGE,AGFC,SAFM,CLOL,AINA,GFGGS,EFGEpB,AINAa,ACCA,EHEP,EEHE,CFGU,KAAKO,CEHC,CAApB,EAAuB,AFGT,CAAUF,IFGpB,AEHF,MFGgC,KAAKjB,OAAL,EAAlC,EAAkD;AAChD,AINA,AFGA,AGFEc,UAAAA,GLKGb,AEHAmB,CGFC,CAAClC,ILKP,CEHA,AGFE,CAAW,KAAK8C,SAAL,CAAeE,GAAf,CAAmBxB,CAAnB,CAAX;ALMH,AINC,AFGA,AGFC,aDDIS,EFGEE,EEHP,EFGW,CEHC,AFGAL,IEHZ,AFGA;AEFA,AFGD,AGFA,aDDMY,IAAL,GAAY,IAAZ;AJOF,AINE,ACCH,WLKMpB,EINEY,OAAL,KJMF,CAAoB,CAApB;AACA,AINE,AFGF,WFGKvB,AEHA,IEHIwB,AFGAX,CAAC,EFGV,CINa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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export const print = (text) => {\r\n  var myDiv = document.getElementById(\"app\");\r\n\r\n  myDiv.innerHTML +=\r\n    \"<div style='color:white; background-color: black;margin-bottom: 1px;font-weight: bold;padding: 3px; padding-left: 20px;'>\" +\r\n    text +\r\n    \"</div>\";\r\n\r\n  document.body.appendChild(myDiv);\r\n};\r\n","import * as Util from \"../../util/Util\";\r\n\r\nexport default class ArrayList {\r\n  constructor() {\r\n    this.INTERNAL_CAPASITY = 10;\r\n    this.internalArray = [\r\n      /*this.INTERNAL_CAPASITY */\r\n    ];\r\n    this.pointer = 0;\r\n  }\r\n\r\n  // Amortized O(1)\r\n  add(item) {\r\n    if (this.isInternalArrayFull() || this.isEmpty()) {\r\n      this.resize();\r\n    }\r\n\r\n    this.internalArray[this.pointer++] = item;\r\n  }\r\n\r\n  // O(1)\r\n  get(index) {\r\n    if (!this.isValidIndex(index)) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.internalArray[index];\r\n  }\r\n\r\n  // O(1)\r\n  set(index, newItem) {\r\n    if (!this.isValidIndex(index)) {\r\n      return undefined;\r\n    }\r\n\r\n    this.internalArray[index] = newItem;\r\n    return this.internalArray[index];\r\n  }\r\n\r\n  // O(N) in the worst case\r\n  remove(index) {\r\n    if (!this.isValidIndex(index)) {\r\n      return undefined;\r\n    }\r\n\r\n    const temp = this.internalArray[index];\r\n    this.internalArray[index] = undefined;\r\n    this.moveAlltoLeft(index + 1);\r\n    this.pointer--;\r\n    return temp;\r\n  }\r\n\r\n  // O(N)\r\n  addToHead(item) {\r\n    if (this.isInternalArrayFull() || this.isEmpty()) {\r\n      this.resize();\r\n    }\r\n\r\n    this.moveAlltoRight(0);\r\n    this.pointer++;\r\n    this.internalArray[0] = item;\r\n  }\r\n\r\n  // O(1)\r\n  size() {\r\n    return this.pointer;\r\n  }\r\n\r\n  // O(1)\r\n  isEmpty() {\r\n    return this.pointer === 0;\r\n  }\r\n\r\n  // O(N)\r\n  resize() {\r\n    if (this.isInternalArrayFull()) {\r\n      // Internal array is full. Need to make bigger\r\n\r\n      /**\r\n       * Creating new Internal array with 1.5 times bigger size and copying all\r\n       * elements from last internal array into new one\r\n       */\r\n      this.INTERNAL_CAPASITY *= 1.5;\r\n      const newInternalArray = [\r\n        /*this.INTERNAL_CAPASITY */\r\n      ];\r\n      for (let i = 0; i < this.internalArray.length; i++) {\r\n        newInternalArray[i] = this.internalArray[i];\r\n      }\r\n\r\n      // Replacing old internal array with new (bigger) one\r\n      this.internalArray = newInternalArray;\r\n    } else if (this.isEmpty() && this.INTERNAL_CAPASITY > 10) {\r\n      // Internal array is full. Need make smaller\r\n\r\n      /**\r\n       * Creating new array with 10 size and replacing internal array with new (smaller) array\r\n       */\r\n      this.INTERNAL_CAPASITY = 10;\r\n      const newInternalArray = [\r\n        /*this.INTERNAL_CAPASITY */\r\n      ];\r\n      this.internalArray = newInternalArray;\r\n    }\r\n  }\r\n\r\n  isInternalArrayFull() {\r\n    return this.pointer === this.INTERNAL_CAPASITY;\r\n  }\r\n\r\n  isValidIndex(index) {\r\n    return index >= 0 && index < this.size();\r\n  }\r\n\r\n  /*\r\n   * This method will take all the items in the right of the given index (given index inclusive)\r\n   * and move them 1 step right\r\n   */\r\n  moveAlltoRight(index) {\r\n    if (!this.isValidIndex(index)) return;\r\n\r\n    for (let i = this.size() - 1; i >= index; i--) {\r\n      this.internalArray[i + 1] = this.internalArray[i];\r\n    }\r\n    this.internalArray[index] = undefined;\r\n  }\r\n\r\n  /*\r\n   * Thii method will take all the items in the left of the given index (given index inclusive)\r\n   * and move them 1 step left. Note first index will dissappear\r\n   */\r\n  moveAlltoLeft(index) {\r\n    if (!this.isValidIndex(index)) return;\r\n\r\n    for (let i = index; i < this.size(); i++) {\r\n      if (i === 0) continue;\r\n      this.internalArray[i - 1] = this.internalArray[i];\r\n    }\r\n\r\n    this.internalArray.pop();\r\n  }\r\n\r\n  print() {\r\n    Util.print(\"Printing the ArrayList\");\r\n    for (let i = 0; i < this.internalArray.length; i++) {\r\n      Util.print(this.internalArray[i]);\r\n    }\r\n  }\r\n}\r\n","export default class SNode {\r\n  constructor(data) {\r\n    this.data = data;\r\n    this.next = null;\r\n  }\r\n}\r\n","import * as Util from \"../../../util/Util\";\r\nimport Node from \"./SNode\";\r\n\r\nexport default class SingleLinkedList {\r\n  constructor() {\r\n    this.root = null;\r\n    this.counter = 0;\r\n  }\r\n\r\n  // O(N)\r\n  add(item) {\r\n    const node = new Node(item);\r\n    if (this.isEmpty()) {\r\n      this.root = node;\r\n    } else {\r\n      const lastNode = this.getLastNode();\r\n      lastNode.next = node;\r\n    }\r\n\r\n    this.counter++;\r\n  }\r\n\r\n  // O(N) in the worst case\r\n  get(index) {\r\n    if (!this.isValidIndex(index)) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.getNodeByIndex(index).data;\r\n  }\r\n\r\n  // O(N) in the worst case\r\n  set(index, newItem) {\r\n    if (!this.isValidIndex(index)) {\r\n      return undefined;\r\n    }\r\n\r\n    const node = this.getNodeByIndex(index);\r\n    node.data = newItem;\r\n    return node.data;\r\n  }\r\n\r\n  // O(N) in the worst case\r\n  remove(index) {\r\n    if (!this.isValidIndex(index)) {\r\n      return undefined;\r\n    }\r\n\r\n    let node = this.root;\r\n\r\n    if (index === 0) {\r\n      this.root = this.root.next;\r\n      this.counter--;\r\n      return node.data;\r\n    }\r\n\r\n    for (let i = 2; i <= index; i++) {\r\n      node = node.next;\r\n    }\r\n\r\n    let temp = node.next;\r\n    node.next = node.next.next;\r\n    this.counter--;\r\n    return temp.data;\r\n  }\r\n\r\n  // O(1)\r\n  addToHead(item) {\r\n    const node = new Node(item);\r\n    node.next = this.root;\r\n    this.root = node;\r\n    this.counter++;\r\n  }\r\n\r\n  // O(1)\r\n  size() {\r\n    return this.counter;\r\n  }\r\n\r\n  // O(1)\r\n  isEmpty() {\r\n    return this.root === null;\r\n  }\r\n\r\n  isValidIndex(index) {\r\n    return index >= 0 && index < this.size();\r\n  }\r\n\r\n  getNodeByIndex(index) {\r\n    if (!this.isValidIndex(index)) {\r\n      return undefined;\r\n    }\r\n\r\n    let node = this.root;\r\n    for (let i = 1; i <= index; i++) {\r\n      node = node.next;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  getLastNode() {\r\n    if (this.isEmpty()) {\r\n      return undefined;\r\n    }\r\n\r\n    if (this.size() === 1) {\r\n      return this.root;\r\n    }\r\n\r\n    let node = this.root;\r\n    while (node.next !== null) {\r\n      node = node.next;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  print() {\r\n    Util.print(\"Printing the SingleLinkedList\");\r\n    let node = this.root;\r\n    while (node != null) {\r\n      Util.print(node.data);\r\n      node = node.next;\r\n    }\r\n  }\r\n}\r\n","export default class DNode {\r\n  constructor(data) {\r\n    this.data = data;\r\n    this.next = null;\r\n    this.prev = null;\r\n  }\r\n}\r\n","import * as Util from \"../../../util/Util\";\r\nimport Node from \"./DNode\";\r\n\r\nexport default class SingleLinkedList {\r\n  constructor() {\r\n    this.root = null;\r\n    this.tail = null;\r\n    this.counter = 0;\r\n  }\r\n\r\n  // O(1)\r\n  add(item) {\r\n    const node = new Node(item);\r\n    if (this.isEmpty()) {\r\n      this.root = node;\r\n      this.tail = node;\r\n    } else {\r\n      node.prev = this.tail;\r\n      this.tail.next = node;\r\n      this.tail = node;\r\n    }\r\n    this.counter++;\r\n  }\r\n\r\n  // O(N/2)\r\n  get(index) {\r\n    const node = this.getNode(index);\r\n    return node === undefined ? undefined : node.data;\r\n  }\r\n\r\n  // O(N/2)\r\n  set(index, newItem) {\r\n    const node = this.getNode(index);\r\n    if (node === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    node.data = newItem;\r\n    return node.data;\r\n  }\r\n\r\n  // O(N/2)\r\n  remove(index) {\r\n    const node = this.getNode(index);\r\n    if (node === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    if (this.size() === 1) {\r\n      // The node we wanna remove is the only node in the linkedlist\r\n      this.root = null;\r\n      this.tail = null;\r\n      this.counter--;\r\n      return node.data;\r\n    }\r\n\r\n    if (node.prev === null) {\r\n      // So this is the root node\r\n      node.next.prev = null;\r\n      this.root = node.next;\r\n    }\r\n\r\n    if (node.next === null) {\r\n      // So this is the tail node\r\n      node.prev.next = null;\r\n      this.tail = node.prev;\r\n    }\r\n\r\n    if (node.next !== null && node.prev !== null) {\r\n      // So node is placed in the middle\r\n      node.prev.next = node.next;\r\n      node.next.prev = node.prev;\r\n    }\r\n\r\n    this.counter--;\r\n    return node.data;\r\n  }\r\n\r\n  // O(1)\r\n  addToHead(item) {\r\n    const node = new Node(item);\r\n    if (this.isEmpty()) {\r\n      this.root = node;\r\n      this.tail = node;\r\n    } else {\r\n      node.next = this.root;\r\n      this.root.prev = node;\r\n      this.root = node;\r\n    }\r\n    this.counter++;\r\n  }\r\n\r\n  size() {\r\n    return this.counter;\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.root == null;\r\n  }\r\n\r\n  isValidIndex(index) {\r\n    return index >= 0 && index < this.size();\r\n  }\r\n\r\n  // O(N/2)\r\n  getNode(index) {\r\n    if (!this.isValidIndex(index)) {\r\n      return undefined;\r\n    }\r\n\r\n    if (index > this.size() / 2) {\r\n      let node = this.tail;\r\n      let startIndex = this.size() - 1;\r\n      while (startIndex !== index) {\r\n        node = node.prev;\r\n        startIndex--;\r\n      }\r\n      return node;\r\n    } else {\r\n      let node = this.root;\r\n      let startIndex = 0;\r\n      while (startIndex !== index) {\r\n        node = node.next;\r\n        startIndex++;\r\n      }\r\n      return node;\r\n    }\r\n  }\r\n\r\n  print() {\r\n    Util.print(\"Printing the DoublyLinkedList\");\r\n    let node = this.root;\r\n    while (node != null) {\r\n      Util.print(node.data);\r\n      node = node.next;\r\n    }\r\n  }\r\n}\r\n","import * as Util from \"../../../util/Util\";\r\nimport ArrayList from \"../../list/ArrayList\";\r\n\r\nexport default class Stack {\r\n  constructor() {\r\n    this.arrayList = new ArrayList();\r\n  }\r\n\r\n  // Amortized O(1)\r\n  push(item) {\r\n    this.arrayList.add(item);\r\n    return this.arrayList.get(this.arrayList.size() - 1);\r\n  }\r\n\r\n  // O(1)\r\n  peek() {\r\n    if (this.isEmpty()) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.arrayList.get(this.arrayList.size() - 1);\r\n  }\r\n\r\n  // O(1)\r\n  pop() {\r\n    if (this.isEmpty()) {\r\n      return undefined;\r\n    }\r\n\r\n    // O(1) Because it alwys removes the last element in the arrayList so after removing any\r\n    // shifting operation will not needed\r\n    return this.arrayList.remove(this.arrayList.size() - 1);\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.arrayList.isEmpty();\r\n  }\r\n\r\n  size() {\r\n    return this.arrayList.size();\r\n  }\r\n\r\n  print() {\r\n    Util.print(\"Printing the Stack\");\r\n    for (let i = this.arrayList.size() - 1; i >= 0; i--) {\r\n      if (i === this.arrayList.size() - 1) {\r\n        Util.print(this.arrayList.get(i) + \" <= HEAD\");\r\n      } else if (i === 0) {\r\n        Util.print(this.arrayList.get(i) + \" <= BOTTOM\");\r\n      } else {\r\n        Util.print(this.arrayList.get(i));\r\n      }\r\n    }\r\n  }\r\n}\r\n","import * as Util from \"./util/Util\";\r\n\r\nimport ArrayList from \"./ds/list/ArrayList\";\r\nimport SingleLinkedList from \"./ds/list/linkedlist/SingleLinkedList\";\r\nimport DoublyLinkedList from \"./ds/list/linkedlist/DoublyLinkedList\";\r\nimport Stack from \"./ds/stack/implwitharraylist/Stack\";\r\n\r\n// const stack = new Stack();\r\n// stack.push(1);\r\n// stack.push(2);\r\n// stack.push(3);\r\n// stack.push(4);\r\n\r\n// stack.print();\r\n\r\n// Util.print(\"peek => \" + stack.peek());\r\n// Util.print(\"pop => \" + stack.pop());\r\n// Util.print(\"pop => \" + stack.pop());\r\n\r\n// stack.print();\r\n\r\n// Util.print(\"pop => \" + stack.pop());\r\n// Util.print(\"pop => \" + stack.pop());\r\n// Util.print(\"pop => \" + stack.pop());\r\n\r\n// stack.print();\r\n\r\n// const arrayList = new DoublyLinkedList();\r\n// arrayList.add(1);\r\n// arrayList.add(2);\r\n// arrayList.add(3);\r\n// arrayList.add(4);\r\n// arrayList.add(5);\r\n\r\n// arrayList.print();\r\n\r\n// arrayList.remove(0);\r\n// arrayList.add(1);\r\n\r\n// arrayList.print();\r\n\r\n// arrayList.set(4, 6);\r\n\r\n// arrayList.print();\r\n\r\n// Util.print(\"[0] = \" + arrayList.get(0));\r\n\r\n// arrayList.addToHead(1);\r\n\r\n// arrayList.print();\r\n\r\n// Util.print(\"[0] = \" + arrayList.get(0));\r\n\r\n// arrayList.add(7);\r\n// arrayList.add(8);\r\n// arrayList.add(9);\r\n// arrayList.add(10);\r\n// arrayList.add(11);\r\n\r\n// arrayList.print();\r\n\r\n// Util.print(\"size = \" + arrayList.size());\r\n"]}